Index: src/main/java/org/example/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\npublic class User {\r\n\r\n    public static String userName, userPassword;\r\n    public static int userNumber;\r\n    public static double PLN;\r\n    public static double USD;\r\n    public static double EUR;\r\n    public static double CZK;\r\n    public static double NOK;\r\n    public static double DKK;\r\n\r\n\r\n\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n    public User(String userName, int userNumber, String userPassword) {\r\n        this.userName = userName;\r\n        this.userNumber = userNumber;\r\n        this.userPassword = userPassword;\r\n    }\r\n\r\n    public void addToUserAccountBalance (double amount) {\r\n        PLN = PLN + amount;\r\n        USD = USD + amount;\r\n        EUR = EUR + amount;\r\n        CZK = CZK + amount;\r\n        NOK = NOK + amount;\r\n        DKK = DKK + amount;\r\n    }\r\n\r\n    public void removeFromUserAccountBalance (double amount) {\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/User.java b/src/main/java/org/example/User.java
--- a/src/main/java/org/example/User.java	(revision 944619e4362a6702d6aede72f51364cbca81f073)
+++ b/src/main/java/org/example/User.java	(date 1675114505422)
@@ -1,9 +1,13 @@
 package org.example;
 
+import static org.example.Menu.user1;
+
 public class User {
 
     public static String userName, userPassword;
+
     public static int userNumber;
+
     public static double PLN;
     public static double USD;
     public static double EUR;
@@ -11,29 +15,43 @@
     public static double NOK;
     public static double DKK;
 
-
-
-    public String getUserName() {
-        return userName;
-    }
-
     public User(String userName, int userNumber, String userPassword) {
         this.userName = userName;
         this.userNumber = userNumber;
         this.userPassword = userPassword;
     }
 
-    public void addToUserAccountBalance (double amount) {
-        PLN = PLN + amount;
-        USD = USD + amount;
-        EUR = EUR + amount;
-        CZK = CZK + amount;
-        NOK = NOK + amount;
-        DKK = DKK + amount;
+    public void addToUserAccountBalance (String currency, double amount) {
+        if ("PLN".equals(currency)) {
+            PLN = PLN + amount;
+            Excel.row2.createCell(1).setCellValue(user1.PLN);
+        } else if ("USD".equals(currency)) {
+            USD = USD + amount;
+            Excel.row2.createCell(2).setCellValue(user1.USD);
+        } else if ("EUR".equals(currency)) {
+            EUR = EUR + amount;
+            Excel.row2.createCell(3).setCellValue(user1.EUR);
+        } else if ("CZK".equals(currency)) {
+            CZK = CZK + amount;
+            Excel.row2.createCell(4).setCellValue(user1.CZK);
+        } else if ("NOK".equals(currency)) {
+            NOK = NOK + amount;
+            Excel.row2.createCell(5).setCellValue(user1.NOK);
+        } else if ("DKK".equals(currency)) {
+            DKK = DKK + amount;
+            Excel.row2.createCell(6).setCellValue(user1.DKK);
+        }
+
+
     }
 
     public void removeFromUserAccountBalance (double amount) {
-
+        PLN = PLN - amount;
+        USD = USD - amount;
+        EUR = EUR - amount;
+        CZK = CZK - amount;
+        NOK = NOK - amount;
+        DKK = DKK - amount;
     }
 
 }
Index: src/main/java/org/example/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n// skroty klawiaturowe:\r\n// Ctrl+Shift+NumPad - / Ctrl+Shift+NumPad + -> zwijanie / rozwijanie metod\r\n// Shift+F10 -> Run metody Main\r\n// Ctrl+/ -> zakomentowanie zaznaczonego obszaru\r\n\r\n//todo: jesli wystapi wyjatek wypisac tekst o co chodzi z wyjatkiem i wyswietlic go na kilka sekund w kosnsoli\r\n\r\n\r\nimport java.text.DecimalFormat;\r\nimport java.util.*;\r\nimport java.text.SimpleDateFormat;\r\n\r\n\r\npublic class Menu {\r\n\r\n\r\n    static User user1 = new User(\"Andrzej Wojciechowski\", 123456, \"ABC123\");\r\n    static User user2 = new User(\"Jan Nowak\", 888999, \"ABC999\");\r\n    // mogę działać na polach dopiero gdy jestem w metodzie ;)\r\n\r\n\r\n    public static final String DATE_FORMAT_NOW = \"yyyy-MM-dd HH:mm:ss\";\r\n\r\n    static Stack<String> stackHistoryPLN = new Stack<String>();\r\n    static Stack<String> stackHistoryUSD = new Stack<String>();\r\n    static Stack<String> stackHistoryEUR = new Stack<String>();\r\n    static Stack<String> stackHistoryCZK = new Stack<String>();\r\n    static Stack<String> stackHistoryDKK = new Stack<String>();\r\n    static Stack<String> stackHistoryNOK = new Stack<String>();\r\n\r\n    static int clientNumber = 0;\r\n    static String clientPassword = \"0\";\r\n    static Scanner scan = new Scanner(System.in);\r\n    static String currencySelectedToCalculation_Deposit;\r\n    static String currencySelectedToCalculation_Withdrawal;\r\n\r\n    static double amount;\r\n\r\n    static double balancePLN = 0;\r\n    static double balanceUSD = 0;\r\n    static double balanceEUR = 0;\r\n    static double balanceCZK = 0;\r\n    static double balanceNOK = 0;\r\n    static double balanceDKK = 0;\r\n\r\n    static String currencyToBeExchange;\r\n    static String currencyToBeExchangeFor;\r\n    static double amountOfCurrencyToBeExchange;\r\n\r\n    static String currencyToCheckItsBalanceHistory;\r\n\r\n    public static void mainMenu() {\r\n\r\n\r\n        /*try {\r\n            BufferedWriter writer = new BufferedWriter(new FileWriter(\"balance.txt\"));\r\n            writer.write(\"aaaa bbbbbb\");\r\n            writer.write(\"\\nsecond row\");\r\n            writer.close();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }*/\r\n\r\n        //XSSFWorkbook workbook = new XSSFWorkbook();\r\n\r\n        Excel tt = new Excel();\r\n        tt.test();\r\n\r\n\r\n        int selection = 001;\r\n        do {\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"*** Currency Exchange ***\");\r\n            System.out.println(\"1. Login\");\r\n            System.out.println(\"0. Exit\");\r\n\r\n            selection = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n    } while (isCatch == true);\r\n\r\n            switch (selection) {\r\n                case 1:\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    clientNumberLoginMenu();\r\n                    break;\r\n                case 0:\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You selected Exit, Goodbye\");\r\n                    System.exit(0);\r\n                    break;\r\n            }\r\n        } while (selection != 1 && selection != 2);\r\n    }\r\n\r\n    public static void clientNumberLoginMenu() {\r\n        int selection = 001;\r\n\r\n        do {\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n        System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n        System.out.println(\">> Enter your client number and password to activate client panel <<\" + \"\\n\");\r\n        System.out.println(\"1. Enter your client number\");\r\n        System.out.println(\"0. Cancel to previous menu\");\r\n        selection = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selection) {\r\n                case 1:\r\n                    boolean isCatch2;\r\n                    do {\r\n                        try {\r\n                            isCatch2 = false;\r\n                            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                            System.out.println(\"Enter your 6-digit client number: \");\r\n                            clientNumber = scan.nextInt();\r\n                        } catch (InputMismatchException e) {\r\n                            isCatch2 = true;\r\n                            scan.nextLine();\r\n                        }\r\n                    } while (isCatch2 == true);\r\n                    clientPasswordLoginMenu();\r\n                    break;\r\n                case 0:\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    mainMenu();\r\n                    break;\r\n            }\r\n        } while (selection != 0 && selection != 1);\r\n    }\r\n\r\n    public static void clientPasswordLoginMenu() {\r\n        int selection = 001;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"1. Enter your client password\");\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selection = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selection) {\r\n                case 1:\r\n                    boolean isCatch2;\r\n                    do {\r\n                        try {\r\n                            isCatch2 = false;\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"Enter your client password: \");\r\n                    clientPassword = scan.next();\r\n                        } catch (InputMismatchException e) {\r\n                            isCatch2 = true;\r\n                            scan.nextLine();\r\n                        }\r\n                    } while (isCatch2 == true);\r\n\r\n\r\n                    if (clientNumber == 123456 && \"ABC123\".equals(clientPassword)) {\r\n                        clientPanelMenu();\r\n                    } else {\r\n                        clientPasswordLoginMenu();\r\n                    }\r\n                    break;\r\n                case 0:\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    mainMenu();\r\n                    break;\r\n            }\r\n        } while (selection != 0 && selection != 1);\r\n    }\r\n\r\n    public static void clientPanelMenu() {\r\n\r\n        int selection = 001;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"*** Client panel ***\");\r\n            System.out.println(\"1. Deposit\");\r\n            System.out.println(\"2. Withdrawal\");\r\n            System.out.println(\"3. Check account balance\");\r\n            System.out.println(\"4. Check account balance history\");\r\n            System.out.println(\"5. Currency exchange\");\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selection = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selection) {\r\n                case 1:\r\n                    depositMenu();\r\n                    break;\r\n                case 2:\r\n                    withdrawalMenu();\r\n                    break;\r\n                case 3:\r\n                    checkAccountBalanceMenu();\r\n                    break;\r\n                case 4:\r\n                    checkAccountBalanceHistoryMenu();\r\n                    break;\r\n                case 5:\r\n                    currencyToBeExchangeMenu();\r\n                    break;\r\n                case 0:\r\n                    clientNumber = 0;\r\n                    clientPassword = \"0\";\r\n                    mainMenu();\r\n                    break;\r\n            }\r\n        } while (selection != 0 && selection != 1 && selection != 2 && selection != 3 && selection != 4 && selection != 5);\r\n    }\r\n\r\n    public static void depositMenu() {\r\n\r\n        int selectedCurrencyToDeposit = 001;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Select currency to deposit:\");\r\n            printCurrencySelectionMenu();\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selectedCurrencyToDeposit = scan.nextInt();\r\n\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selectedCurrencyToDeposit) {\r\n                case 1:\r\n                    currencySelectedToCalculation_Deposit = \"PLN\";\r\n                    amountMenu(true, false);\r\n                    break;\r\n                case 2:\r\n                    currencySelectedToCalculation_Deposit = \"USD\";\r\n                    amountMenu(true, false);\r\n                    break;\r\n                case 3:\r\n                    currencySelectedToCalculation_Deposit = \"EUR\";\r\n                    amountMenu(true, false);\r\n                    break;\r\n                case 4:\r\n                    currencySelectedToCalculation_Deposit = \"CZK\";\r\n                    amountMenu(true, false);\r\n                    break;\r\n                case 5:\r\n                    currencySelectedToCalculation_Deposit = \"NOK\";\r\n                    amountMenu(true, false);\r\n                    break;\r\n                case 6:\r\n                    currencySelectedToCalculation_Deposit = \"DKK\";\r\n                    amountMenu(true, false);\r\n                    break;\r\n                case 0:\r\n                    clientPanelMenu();\r\n                    break;\r\n            }\r\n        } while (selectedCurrencyToDeposit != 0 && selectedCurrencyToDeposit != 1 && selectedCurrencyToDeposit != 2 && selectedCurrencyToDeposit != 3 && selectedCurrencyToDeposit != 4 && selectedCurrencyToDeposit != 5 && selectedCurrencyToDeposit != 6);\r\n    }\r\n\r\n    public static void checkAccountBalanceHistoryMenu() {\r\n        int selection = 001;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Select currency to check its balance history:\");\r\n            printCurrencySelectionMenu();\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selection = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selection) {\r\n                case 1:\r\n                    currencyToCheckItsBalanceHistory = \"PLN\";\r\n                    balanceHistoryMenu(\"PLN\");\r\n                    break;\r\n                case 2:\r\n                    currencyToCheckItsBalanceHistory = \"USD\";\r\n                    balanceHistoryMenu(\"USD\");\r\n                    break;\r\n                case 3:\r\n                    currencyToCheckItsBalanceHistory = \"EUR\";\r\n                    balanceHistoryMenu(\"EUR\");\r\n                    break;\r\n                case 4:\r\n                    currencyToCheckItsBalanceHistory = \"CZK\";\r\n                    balanceHistoryMenu(\"CZK\");\r\n                    break;\r\n                case 5:\r\n                    currencyToCheckItsBalanceHistory = \"NOK\";\r\n                    balanceHistoryMenu(\"NOK\");\r\n                    break;\r\n                case 6:\r\n                    currencyToCheckItsBalanceHistory = \"DKK\";\r\n                    balanceHistoryMenu(\"DKK\");\r\n                    break;\r\n                case 0:\r\n                    clientPanelMenu();\r\n                    break;\r\n            }\r\n        } while (selection != 0 && selection != 1 && selection != 2 && selection != 3 && selection != 4 && selection != 5 && selection != 6);\r\n    }\r\n\r\n    public static void withdrawalMenu() {\r\n\r\n        int selectedCurrencyToWithdrawal = 001;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Select currency to withdrawal:\");\r\n            printCurrencySelectionMenu();\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selectedCurrencyToWithdrawal = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selectedCurrencyToWithdrawal) {\r\n                case 1:\r\n                    currencySelectedToCalculation_Withdrawal = \"PLN\";\r\n                    amountMenu(false, true);\r\n                    break;\r\n                case 2:\r\n                    currencySelectedToCalculation_Withdrawal = \"USD\";\r\n                    amountMenu(false, true);\r\n                    break;\r\n                case 3:\r\n                    currencySelectedToCalculation_Withdrawal = \"EUR\";\r\n                    amountMenu(false, true);\r\n                    break;\r\n                case 4:\r\n                    currencySelectedToCalculation_Withdrawal = \"CZK\";\r\n                    amountMenu(false, true);\r\n                    break;\r\n                case 5:\r\n                    currencySelectedToCalculation_Withdrawal = \"NOK\";\r\n                    amountMenu(false, true);\r\n                    break;\r\n                case 6:\r\n                    currencySelectedToCalculation_Withdrawal = \"DKK\";\r\n                    amountMenu(false, true);\r\n                    break;\r\n                case 0:\r\n                    clientPanelMenu();\r\n                    break;\r\n            }\r\n        } while (selectedCurrencyToWithdrawal != 0 && selectedCurrencyToWithdrawal != 1 && selectedCurrencyToWithdrawal != 2 && selectedCurrencyToWithdrawal != 3 && selectedCurrencyToWithdrawal != 4 && selectedCurrencyToWithdrawal != 5 && selectedCurrencyToWithdrawal != 6);\r\n    }\r\n\r\n    public static void checkAccountBalanceMenu() {\r\n\r\n        int selection = 001;\r\n\r\n        DecimalFormat df = new DecimalFormat(\"####0.00\");\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Your account balance:\");\r\n            System.out.println(\"PLN  \" + df.format(balancePLN));\r\n            System.out.println(\"USD  \" + df.format(balanceUSD));\r\n            System.out.println(\"EUR  \" + df.format(balanceEUR));\r\n            System.out.println(\"CZK  \" + df.format(balanceCZK));\r\n            System.out.println(\"NOK  \" + df.format(balanceNOK));\r\n            System.out.println(\"DKK  \" + df.format(balanceDKK));\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selection = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            if (selection == 0) {\r\n                clientPanelMenu();\r\n            }\r\n        } while (selection != 0);\r\n    }\r\n\r\n    public static void currencyToBeExchangeMenu() {\r\n\r\n        int selectedCurrencyToBeExchange = 001;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Select currency to be exchange:\");\r\n            printCurrencySelectionMenu();\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selectedCurrencyToBeExchange = scan.nextInt();\r\n\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selectedCurrencyToBeExchange) {\r\n                case 1:\r\n                    Menu.currencyToBeExchange = \"PLN\";\r\n                    amountToBeExchangeMenu();\r\n                    break;\r\n                case 2:\r\n                    Menu.currencyToBeExchange = \"USD\";\r\n                    amountToBeExchangeMenu();\r\n                    break;\r\n                case 3:\r\n                    Menu.currencyToBeExchange = \"EUR\";\r\n                    amountToBeExchangeMenu();\r\n                    break;\r\n                case 4:\r\n                    Menu.currencyToBeExchange = \"CZK\";\r\n                    amountToBeExchangeMenu();\r\n                    break;\r\n                case 5:\r\n                    Menu.currencyToBeExchange = \"NOK\";\r\n                    amountToBeExchangeMenu();\r\n                    break;\r\n                case 6:\r\n                    Menu.currencyToBeExchange = \"DKK\";\r\n                    amountToBeExchangeMenu();\r\n                    break;\r\n                case 0:\r\n                    clientPanelMenu();\r\n                    break;\r\n            }\r\n        } while (selectedCurrencyToBeExchange != 0 && selectedCurrencyToBeExchange != 1 && selectedCurrencyToBeExchange != 2 && selectedCurrencyToBeExchange != 3 && selectedCurrencyToBeExchange != 4 && selectedCurrencyToBeExchange != 5 && selectedCurrencyToBeExchange != 6);\r\n    }\r\n\r\n    public static void currencyToBeExchangedForMenu() {\r\n\r\n        int selectedCurrencyToBeExchangedFor = 0;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Select currency to be exchanged for:\");\r\n            printCurrencySelectionMenu();\r\n            System.out.println(\"0. Cancel to previous menu\");\r\n\r\n            selectedCurrencyToBeExchangedFor = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n            switch (selectedCurrencyToBeExchangedFor) {\r\n\r\n                case 1:\r\n                    Menu.currencyToBeExchangeFor = \"PLN\";\r\n                    currencyExchangeCalculation(currencyToBeExchange, currencyToBeExchangeFor, amountOfCurrencyToBeExchange);\r\n                    theCurrencyHasBeenExchangeMenu();\r\n                    break;\r\n                case 2:\r\n                    Menu.currencyToBeExchangeFor = \"USD\";\r\n                    currencyExchangeCalculation(currencyToBeExchange, currencyToBeExchangeFor, amountOfCurrencyToBeExchange);\r\n                    theCurrencyHasBeenExchangeMenu();\r\n                    break;\r\n                case 3:\r\n                    Menu.currencyToBeExchangeFor = \"EUR\";\r\n                    currencyExchangeCalculation(currencyToBeExchange, currencyToBeExchangeFor, amountOfCurrencyToBeExchange);\r\n                    theCurrencyHasBeenExchangeMenu();\r\n                    break;\r\n                case 4:\r\n                    Menu.currencyToBeExchangeFor = \"CZK\";\r\n                    currencyExchangeCalculation(currencyToBeExchange, currencyToBeExchangeFor, amountOfCurrencyToBeExchange);\r\n                    theCurrencyHasBeenExchangeMenu();\r\n                    break;\r\n                case 5:\r\n                    Menu.currencyToBeExchangeFor = \"NOK\";\r\n                    currencyExchangeCalculation(currencyToBeExchange, currencyToBeExchangeFor, amountOfCurrencyToBeExchange);\r\n                    theCurrencyHasBeenExchangeMenu();\r\n                    break;\r\n                case 6:\r\n                    Menu.currencyToBeExchangeFor = \"DKK\";\r\n                    currencyExchangeCalculation(currencyToBeExchange, currencyToBeExchangeFor, amountOfCurrencyToBeExchange);\r\n                    theCurrencyHasBeenExchangeMenu();\r\n                    break;\r\n                case 0:\r\n                    currencyToBeExchangeMenu();\r\n                    break;\r\n            }\r\n        } while (selectedCurrencyToBeExchangedFor != 0 && selectedCurrencyToBeExchangedFor != 1 && selectedCurrencyToBeExchangedFor != 2 && selectedCurrencyToBeExchangedFor != 3 && selectedCurrencyToBeExchangedFor != 4 && selectedCurrencyToBeExchangedFor != 5 && selectedCurrencyToBeExchangedFor != 6);\r\n    }\r\n\r\n    public static void amountMenu(boolean isDeposit, boolean isWithdrawal) {\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Enter amount: \");\r\n            amount = scan.nextDouble();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n        } while (amount < 0);\r\n\r\n        if (isDeposit == true) {\r\n            calculateAccountBalance_Deposit(currencySelectedToCalculation_Deposit, amount);\r\n            balanceHistoryCalculation(currencySelectedToCalculation_Deposit, true, false, false, false, amount);\r\n        } else if (isWithdrawal == true) {\r\n            calculateAccountBalance_Withdrawal(currencySelectedToCalculation_Withdrawal, amount);\r\n            balanceHistoryCalculation(currencySelectedToCalculation_Withdrawal, false, true, false, false, amount);\r\n        }\r\n\r\n        int scanner = 001;\r\n        do {\r\n\r\n            boolean isCatch2;\r\n            do {\r\n                try {\r\n                    isCatch2 = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"The operation has been completed successfully. The account balance has been updated\");\r\n            System.out.println(\"0. Exit to client panel\");\r\n            scanner = scan.nextInt();\r\n        } catch (InputMismatchException e) {\r\n            isCatch2 = true;\r\n            scan.nextLine();\r\n        }\r\n    } while (isCatch2 == true);\r\n\r\n        } while (scanner != 0);\r\n\r\n        clientPanelMenu();\r\n    }\r\n\r\n    public static void amountToBeExchangeMenu() {\r\n\r\n        int amount = 0;\r\n\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"Enter amount: \");\r\n\r\n            amount = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n        } while (amount < 0);\r\n\r\n        amountOfCurrencyToBeExchange = amount;\r\n\r\n        currencyToBeExchangedForMenu();\r\n    }\r\n\r\n    public static void theCurrencyHasBeenExchangeMenu() {\r\n        int scanner = 001;\r\n        do {\r\n\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"The currency has been exchanged\");\r\n            System.out.println(\"0. Exit to client panel\");\r\n            scanner = scan.nextInt();\r\n                } catch (InputMismatchException e) {\r\n                    isCatch = true;\r\n                    scan.nextLine();\r\n                }\r\n            } while (isCatch == true);\r\n\r\n        } while (scanner != 0);\r\n        clientPanelMenu();\r\n    }\r\n\r\n    private static void balanceHistoryMenu(String currency) {\r\n        int scanner = 001;\r\n\r\n        do {\r\n            boolean isCatch;\r\n            do {\r\n                try {\r\n                    isCatch = false;\r\n\r\n            System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            System.out.println(\"History of transactions (last 3):\");\r\n            if (\"PLN\".equals(currency)) {\r\n                if (stackHistoryPLN.size() > 0) {\r\n                    System.out.println(stackHistoryPLN.get(stackHistoryPLN.size() - 1));\r\n                    if (stackHistoryPLN.size() > 1) {\r\n                        System.out.println(stackHistoryPLN.get(stackHistoryPLN.size() - 2));\r\n                        if (stackHistoryPLN.size() > 2) {\r\n                            System.out.println(stackHistoryPLN.get(stackHistoryPLN.size() - 3));\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"USD\".equals(currency)) {\r\n                if (stackHistoryUSD.size() > 0) {\r\n                    System.out.println(stackHistoryUSD.get(stackHistoryUSD.size() - 1));\r\n                    if (stackHistoryUSD.size() > 1) {\r\n                        System.out.println(stackHistoryPLN.get(stackHistoryUSD.size() - 2));\r\n                        if (stackHistoryUSD.size() > 2) {\r\n                            System.out.println(stackHistoryUSD.get(stackHistoryUSD.size() - 3));\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"EUR\".equals(currency)) {\r\n                if (stackHistoryEUR.size() > 0) {\r\n                    System.out.println(stackHistoryEUR.get(stackHistoryEUR.size() - 1));\r\n                    if (stackHistoryEUR.size() > 1) {\r\n                        System.out.println(stackHistoryEUR.get(stackHistoryEUR.size() - 2));\r\n                        if (stackHistoryEUR.size() > 2) {\r\n                            System.out.println(stackHistoryEUR.get(stackHistoryEUR.size() - 3));\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"CZK\".equals(currency)) {\r\n                if (stackHistoryCZK.size() > 0) {\r\n                    System.out.println(stackHistoryCZK.get(stackHistoryCZK.size() - 1));\r\n                    if (stackHistoryCZK.size() > 1) {\r\n                        System.out.println(stackHistoryCZK.get(stackHistoryCZK.size() - 2));\r\n                        if (stackHistoryCZK.size() > 2) {\r\n                            System.out.println(stackHistoryCZK.get(stackHistoryCZK.size() - 3));\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"DKK\".equals(currency)) {\r\n                if (stackHistoryDKK.size() > 0) {\r\n                    System.out.println(stackHistoryDKK.get(stackHistoryDKK.size() - 1));\r\n                    if (stackHistoryDKK.size() > 1) {\r\n                        System.out.println(stackHistoryDKK.get(stackHistoryDKK.size() - 2));\r\n                        if (stackHistoryDKK.size() > 2) {\r\n                            System.out.println(stackHistoryDKK.get(stackHistoryDKK.size() - 3));\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"NOK\".equals(currency)) {\r\n                if (stackHistoryNOK.size() > 0) {\r\n                    System.out.println(stackHistoryNOK.get(stackHistoryNOK.size() - 1));\r\n                    if (stackHistoryNOK.size() > 1) {\r\n                        System.out.println(stackHistoryNOK.get(stackHistoryNOK.size() - 2));\r\n                        if (stackHistoryNOK.size() > 2) {\r\n                            System.out.println(stackHistoryNOK.get(stackHistoryNOK.size() - 3));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            System.out.println(\"0. Exit to client panel\");\r\n            scanner = scan.nextInt();\r\n\r\n\r\n        } catch (InputMismatchException e) {\r\n            isCatch = true;\r\n            scan.nextLine();\r\n        }\r\n    } while (isCatch == true);\r\n\r\n        } while (scanner != 0);\r\n        clientPanelMenu();\r\n    }\r\n\r\n    public static void printCurrencySelectionMenu() {\r\n            System.out.println(\"1. PLN\");\r\n            System.out.println(\"2. USD\");\r\n            System.out.println(\"3. EUR\");\r\n            System.out.println(\"4. CZK\");\r\n            System.out.println(\"5. NOK\");\r\n            System.out.println(\"6. DKK\");\r\n    }\r\n\r\n    public static void calculateAccountBalance_Deposit(String currencySelectedToCalculation_Deposit, double amount) {\r\n\r\n        if (\"PLN\".equals(currencySelectedToCalculation_Deposit)) {\r\n            balancePLN = balancePLN + amount;\r\n        } else if (\"USD\".equals(currencySelectedToCalculation_Deposit)) {\r\n            balanceUSD = balanceUSD + amount;\r\n        }   else if (\"EUR\".equals(currencySelectedToCalculation_Deposit)) {\r\n            balanceEUR = balanceEUR + amount;\r\n        }   else if (\"CZK\".equals(currencySelectedToCalculation_Deposit)) {\r\n            balanceCZK = balanceCZK + amount;\r\n        }   else if (\"NOK\".equals(currencySelectedToCalculation_Deposit)) {\r\n            balanceNOK = balanceNOK + amount;\r\n        }   else if (\"DKK\".equals(currencySelectedToCalculation_Deposit)) {\r\n            balanceDKK = balanceDKK + amount;\r\n        }\r\n\r\n    }\r\n\r\n    public static void calculateAccountBalance_Withdrawal(String currencySelectedToCalculation_Withdrawal, double amount) {\r\n\r\n        if (\"PLN\".equals(currencySelectedToCalculation_Withdrawal)) {\r\n            balancePLN = balancePLN - amount;\r\n            if (balancePLN < 0) {\r\n                balancePLN = 0;\r\n            }\r\n        } else if (\"USD\".equals(currencySelectedToCalculation_Withdrawal)) {\r\n            balanceUSD = balanceUSD - amount;\r\n            if (balanceUSD < 0) {\r\n                balanceUSD = 0;\r\n            }\r\n        }   else if (\"EUR\".equals(currencySelectedToCalculation_Withdrawal)) {\r\n            balanceEUR = balanceEUR - amount;\r\n            if (balanceEUR < 0) {\r\n                balanceEUR = 0;\r\n            }\r\n        }   else if (\"CZK\".equals(currencySelectedToCalculation_Withdrawal)) {\r\n            balanceCZK = balanceCZK - amount;\r\n            if (balanceCZK < 0) {\r\n                balanceCZK = 0;\r\n            }\r\n        }   else if (\"NOK\".equals(currencySelectedToCalculation_Withdrawal)) {\r\n            balanceNOK = balanceNOK - amount;\r\n            if (balanceNOK < 0) {\r\n                balanceNOK = 0;\r\n            }\r\n        }   else if (\"DKK\".equals(currencySelectedToCalculation_Withdrawal)) {\r\n            balanceDKK = balanceDKK - amount;\r\n            if (balanceDKK < 0) {\r\n                balanceDKK = 0;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static void currencyExchangeCalculation(String currencyToBeExchange, String currencyToBeExchangeFor, double amountOfCurrencyToBeExchange) {\r\n        double PLNtoUSD = 0.21; double PLNtoEUR = 0.21;  double PLNtoCZK = 5.20; double PLNtoNOK = 2.17; double PLNtoDKK = 1.58;\r\n        double USDtoPLN = 4.73; double USDtoEUR = 1.00;  double USDtoCZK = 24.59; double USDtoNOK = 10.31; double USDtoDKK = 7.47;\r\n        double EURtoPLN = 4.72; double EURtoUSD = 1.00;  double EURtoCZK = 24.51; double EURtoNOK = 10.26; double EURtoDKK = 7.44;\r\n        double CZKtoPLN = 0.19; double CZKtoUSD = 0.041;  double CZKtoEUR = 0.041; double CZKtoNOK = 0.42; double CZKtoDKK = 0.30;\r\n        double NOKtoPLN = 0.45; double NOKtoUSD = 0.096;  double NOKtoEUR = 0.097; double NOKtoCZK = 2.36; double NOKtoDKK = 0.72;\r\n        double DKKtoPLN = 0.63; double DKKtoUSD = 0.13;  double DKKtoEUR = 0.13; double DKKtoCZK = 3.29; double DKKtoNOK = 1.38;\r\n\r\n        int scanner;\r\n\r\n        if (\"PLN\".equals(currencyToBeExchange) && \"USD\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balancePLN) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balancePLN = balancePLN - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"PLN\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceUSD = balanceUSD + (amountOfCurrencyToBeExchange * PLNtoUSD);\r\n            balanceHistoryCalculation(\"USD\", false, false, true, false, amountOfCurrencyToBeExchange * PLNtoUSD);\r\n        } else if (\"PLN\".equals(currencyToBeExchange) && \"EUR\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balancePLN) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balancePLN = balancePLN - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"PLN\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceEUR = balanceEUR + (amountOfCurrencyToBeExchange * PLNtoEUR);\r\n            balanceHistoryCalculation(\"EUR\", false, false, true, false, amountOfCurrencyToBeExchange * PLNtoEUR);\r\n        } else if (\"PLN\".equals(currencyToBeExchange) && \"CZK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balancePLN) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balancePLN = balancePLN - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"PLN\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceCZK = balanceCZK + (amountOfCurrencyToBeExchange * PLNtoCZK);\r\n            balanceHistoryCalculation(\"CZK\", false, false, true, false, amountOfCurrencyToBeExchange * PLNtoCZK);\r\n        } else if (\"PLN\".equals(currencyToBeExchange) && \"NOK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balancePLN) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balancePLN = balancePLN - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"PLN\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceNOK = balanceNOK + (amountOfCurrencyToBeExchange * PLNtoNOK);\r\n            balanceHistoryCalculation(\"NOK\", false, false, true, false, amountOfCurrencyToBeExchange * PLNtoNOK);\r\n        } else if (\"PLN\".equals(currencyToBeExchange) && \"DKK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balancePLN) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balancePLN = balancePLN - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"PLN\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceDKK = balanceDKK + (amountOfCurrencyToBeExchange * PLNtoDKK);\r\n            balanceHistoryCalculation(\"DKK\", false, false, true, false, amountOfCurrencyToBeExchange * PLNtoDKK);\r\n        }\r\n\r\n        else if (\"USD\".equals(currencyToBeExchange) && \"PLN\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceUSD) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceUSD = balanceUSD - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"USD\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balancePLN = balancePLN + (amountOfCurrencyToBeExchange * USDtoPLN);\r\n            balanceHistoryCalculation(\"PLN\", false, false, true, false, amountOfCurrencyToBeExchange * USDtoPLN);\r\n        } else if (\"USD\".equals(currencyToBeExchange) && \"EUR\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceUSD) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceUSD = balanceUSD - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"USD\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceEUR = balanceEUR + (amountOfCurrencyToBeExchange * USDtoEUR);\r\n            balanceHistoryCalculation(\"EUR\", false, false, true, false, amountOfCurrencyToBeExchange * USDtoEUR);\r\n        } else if (\"USD\".equals(currencyToBeExchange) && \"CZK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceUSD) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceUSD = balanceUSD - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"USD\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceCZK = balanceCZK + (amountOfCurrencyToBeExchange * USDtoCZK);\r\n            balanceHistoryCalculation(\"CZK\", false, false, true, false, amountOfCurrencyToBeExchange * USDtoCZK);\r\n        } else if (\"USD\".equals(currencyToBeExchange) && \"NOK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceUSD) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceUSD = balanceUSD - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"USD\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceNOK = balanceNOK + (amountOfCurrencyToBeExchange * USDtoNOK);\r\n            balanceHistoryCalculation(\"NOK\", false, false, true, false, amountOfCurrencyToBeExchange * USDtoNOK);\r\n        } else if (\"USD\".equals(currencyToBeExchange) && \"DKK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceUSD) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceUSD = balanceUSD - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"USD\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceDKK = balanceDKK + (amountOfCurrencyToBeExchange * USDtoDKK);\r\n            balanceHistoryCalculation(\"DKK\", false, false, true, false, amountOfCurrencyToBeExchange * USDtoDKK);\r\n        }\r\n\r\n        else if (\"EUR\".equals(currencyToBeExchange) && \"PLN\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceEUR) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceEUR = balanceEUR - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"EUR\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balancePLN = balancePLN + (amountOfCurrencyToBeExchange * EURtoPLN);\r\n            balanceHistoryCalculation(\"PLN\", false, false, true, false, amountOfCurrencyToBeExchange * EURtoPLN);\r\n        } else if (\"EUR\".equals(currencyToBeExchange) && \"USD\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceEUR) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceEUR = balanceEUR - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"EUR\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceUSD = balanceUSD + (amountOfCurrencyToBeExchange * EURtoUSD);\r\n            balanceHistoryCalculation(\"USD\", false, false, true, false, amountOfCurrencyToBeExchange * EURtoUSD);\r\n        } else if (\"EUR\".equals(currencyToBeExchange) && \"CZK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceEUR) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceEUR = balanceEUR - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"EUR\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceCZK = balanceCZK + (amountOfCurrencyToBeExchange * EURtoCZK);\r\n            balanceHistoryCalculation(\"CZK\", false, false, true, false, amountOfCurrencyToBeExchange * EURtoCZK);\r\n        } else if (\"EUR\".equals(currencyToBeExchange) && \"NOK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceEUR) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceEUR = balanceEUR - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"EUR\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceNOK = balanceNOK + (amountOfCurrencyToBeExchange * EURtoNOK);\r\n            balanceHistoryCalculation(\"NOK\", false, false, true, false, amountOfCurrencyToBeExchange * EURtoNOK);\r\n        } else if (\"EUR\".equals(currencyToBeExchange) && \"DKK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceEUR) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceEUR = balanceEUR - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"EUR\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceDKK = balanceDKK + (amountOfCurrencyToBeExchange * EURtoDKK);\r\n            balanceHistoryCalculation(\"DKK\", false, false, true, false, amountOfCurrencyToBeExchange * EURtoDKK);\r\n        }\r\n\r\n        else if (\"CZK\".equals(currencyToBeExchange) && \"PLN\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceCZK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceCZK = balanceCZK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"CZK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balancePLN = balancePLN + (amountOfCurrencyToBeExchange * CZKtoPLN);\r\n            balanceHistoryCalculation(\"PLN\", false, false, true, false, amountOfCurrencyToBeExchange * CZKtoPLN);\r\n        } else if (\"CZK\".equals(currencyToBeExchange) && \"USD\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceCZK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceCZK = balanceCZK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"CZK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceUSD = balanceUSD + (amountOfCurrencyToBeExchange * CZKtoUSD);\r\n            balanceHistoryCalculation(\"USD\", false, false, true, false, amountOfCurrencyToBeExchange * CZKtoUSD);\r\n        } else if (\"CZK\".equals(currencyToBeExchange) && \"EUR\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceCZK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceCZK = balanceCZK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"CZK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceEUR = balanceEUR + (amountOfCurrencyToBeExchange * CZKtoEUR);\r\n            balanceHistoryCalculation(\"EUR\", false, false, true, false, amountOfCurrencyToBeExchange * CZKtoEUR);\r\n        } else if (\"CZK\".equals(currencyToBeExchange) && \"NOK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceCZK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceCZK = balanceCZK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"CZK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceNOK = balanceNOK + (amountOfCurrencyToBeExchange * CZKtoNOK);\r\n            balanceHistoryCalculation(\"NOK\", false, false, true, false, amountOfCurrencyToBeExchange * CZKtoNOK);\r\n        } else if (\"CZK\".equals(currencyToBeExchange) && \"DKK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceCZK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceCZK = balanceCZK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"CZK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceDKK = balanceDKK + (amountOfCurrencyToBeExchange * CZKtoDKK);\r\n            balanceHistoryCalculation(\"DKK\", false, false, true, false, amountOfCurrencyToBeExchange * CZKtoDKK);\r\n        }\r\n\r\n        else if (\"NOK\".equals(currencyToBeExchange) && \"PLN\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceNOK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceNOK = balanceNOK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"NOK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balancePLN = balancePLN + (amountOfCurrencyToBeExchange * NOKtoPLN);\r\n            balanceHistoryCalculation(\"PLN\", false, false, true, false, amountOfCurrencyToBeExchange * NOKtoPLN);\r\n        } else if (\"NOK\".equals(currencyToBeExchange) && \"USD\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceNOK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceNOK = balanceNOK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"NOK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceUSD = balanceUSD + (amountOfCurrencyToBeExchange * NOKtoUSD);\r\n            balanceHistoryCalculation(\"USD\", false, false, true, false, amountOfCurrencyToBeExchange * NOKtoUSD);\r\n        } else if (\"NOK\".equals(currencyToBeExchange) && \"EUR\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceNOK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceNOK = balanceNOK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"NOK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceEUR = balanceEUR + (amountOfCurrencyToBeExchange * NOKtoEUR);\r\n            balanceHistoryCalculation(\"EUR\", false, false, true, false, amountOfCurrencyToBeExchange * NOKtoEUR);\r\n        } else if (\"NOK\".equals(currencyToBeExchange) && \"CZK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceNOK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceNOK = balanceNOK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"NOK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceCZK = balanceCZK + (amountOfCurrencyToBeExchange * NOKtoCZK);\r\n            balanceHistoryCalculation(\"CZK\", false, false, true, false, amountOfCurrencyToBeExchange * NOKtoCZK);\r\n        } else if (\"NOK\".equals(currencyToBeExchange) && \"DKK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceNOK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceNOK = balanceNOK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"NOK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceDKK = balanceDKK + (amountOfCurrencyToBeExchange * NOKtoDKK);\r\n            balanceHistoryCalculation(\"DKK\", false, false, true, false, amountOfCurrencyToBeExchange * NOKtoDKK);\r\n        }\r\n\r\n        else if (\"DKK\".equals(currencyToBeExchange) && \"PLN\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceDKK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceDKK = balanceDKK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"DKK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balancePLN = balancePLN + (amountOfCurrencyToBeExchange * DKKtoPLN);\r\n            balanceHistoryCalculation(\"PLN\", false, false, true, false, amountOfCurrencyToBeExchange * DKKtoPLN);\r\n        } else if (\"DKK\".equals(currencyToBeExchange) && \"USD\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceDKK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceDKK = balanceDKK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"DKK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceUSD = balanceUSD + (amountOfCurrencyToBeExchange * DKKtoUSD);\r\n            balanceHistoryCalculation(\"USD\", false, false, true, false, amountOfCurrencyToBeExchange * DKKtoUSD);\r\n        } else if (\"DKK\".equals(currencyToBeExchange) && \"EUR\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceDKK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceDKK = balanceDKK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"DKK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceEUR = balanceEUR + (amountOfCurrencyToBeExchange * DKKtoEUR);\r\n            balanceHistoryCalculation(\"EUR\", false, false, true, false, amountOfCurrencyToBeExchange * DKKtoEUR);\r\n        } else if (\"DKK\".equals(currencyToBeExchange) && \"CZK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceDKK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceDKK = balanceDKK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"DKK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceCZK = balanceCZK + (amountOfCurrencyToBeExchange * DKKtoCZK);\r\n            balanceHistoryCalculation(\"CZK\", false, false, true, false, amountOfCurrencyToBeExchange * DKKtoCZK);\r\n        } else if (\"DKK\".equals(currencyToBeExchange) && \"NOK\".equals(currencyToBeExchangeFor)) {\r\n            if (amountOfCurrencyToBeExchange > balanceDKK) {\r\n                do {\r\n                    System.out.print(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                    System.out.println(\"You do not have enough funds to complete this operation\");\r\n                    System.out.println(\"0. Exit to client panel\");\r\n                    scanner = scan.nextInt();\r\n                } while (scanner != 0);\r\n                clientPanelMenu();\r\n            }\r\n            balanceDKK = balanceDKK - amountOfCurrencyToBeExchange;\r\n            balanceHistoryCalculation(\"DKK\", false, false, false, true, amountOfCurrencyToBeExchange);\r\n            balanceNOK = balanceNOK + (amountOfCurrencyToBeExchange * DKKtoNOK);\r\n            balanceHistoryCalculation(\"DKK\", false, false, true, false, amountOfCurrencyToBeExchange * DKKtoNOK);\r\n        }\r\n    }\r\n\r\n    public static void balanceHistoryCalculation(String currency, boolean isDepositBalanceHistory, boolean isWithdrawalBalanceHistory, boolean isAddedAfterCurrencyExchangeBalanceHistory, boolean isDeductedAfterCurrencyExchangeBalanceHistory, double amount) {\r\n        String sign;\r\n        String amountString = Double.toString(amount);\r\n        String deposit = \"deposit\";\r\n        String withdrawal = \"withdrawal\";\r\n        String addedAfterTransfer = \"added from transfer\";\r\n        String deductedAfterTransfer = \"deducted after transfer\";\r\n\r\n        if (\"PLN\".equals(currency)) {\r\n            if (isDepositBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryPLN.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deposit + \" || \" + \"Account balance after transaction: \" + balancePLN + \" \" + currency);\r\n            } else if (isWithdrawalBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryPLN.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + withdrawal + \" || \" + \"Account balance after transaction: \" + balancePLN + \" \" + currency);\r\n            } else if (isAddedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryPLN.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + addedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balancePLN + \" \" + currency);\r\n            } else if (isDeductedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryPLN.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deductedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balancePLN + \" \" + currency);\r\n            }\r\n        } else if (\"USD\".equals(currency)) {\r\n            if (isDepositBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryUSD.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deposit + \" || \" + \"Account balance after transaction: \" + balanceUSD + \" \" + currency);\r\n            } else if (isWithdrawalBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryUSD.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + withdrawal + \" || \" + \"Account balance after transaction: \" + balanceUSD + \" \" + currency);\r\n            } else if (isAddedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryUSD.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + addedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceUSD + \" \" + currency);\r\n            } else if (isDeductedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryUSD.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deductedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceUSD + \" \" + currency);\r\n            }\r\n        } else if (\"EUR\".equals(currency)) {\r\n            if (isDepositBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryEUR.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deposit + \" || \" + \"Account balance after transaction: \" + balanceEUR + \" \" + currency);\r\n            } else if (isWithdrawalBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryEUR.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + withdrawal + \" || \" + \"Account balance after transaction: \" + balanceEUR + \" \" + currency);\r\n            } else if (isAddedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryEUR.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + addedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceEUR + \" \" + currency);\r\n            } else if (isDeductedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryEUR.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deductedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceEUR + \" \" + currency);\r\n            }\r\n        } else if (\"CZK\".equals(currency)) {\r\n            if (isDepositBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryCZK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deposit + \" || \" + \"Account balance after transaction: \" + balanceCZK + \" \" + currency);\r\n            } else if (isWithdrawalBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryCZK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + withdrawal + \" || \" + \"Account balance after transaction: \" + balanceCZK + \" \" + currency);\r\n            } else if (isAddedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryCZK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + addedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceCZK + \" \" + currency);\r\n            } else if (isDeductedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryCZK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deductedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceCZK + \" \" + currency);\r\n            }\r\n        } else if (\"NOK\".equals(currency)) {\r\n            if (isDepositBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryNOK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deposit + \" || \" + \"Account balance after transaction: \" + balanceNOK + \" \" + currency);\r\n            } else if (isWithdrawalBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryNOK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + withdrawal + \" || \" + \"Account balance after transaction: \" + balanceNOK + \" \" + currency);\r\n            } else if (isAddedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryNOK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + addedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceNOK + \" \" + currency);\r\n            } else if (isDeductedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryNOK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deductedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceNOK + \" \" + currency);\r\n            }\r\n        } else if (\"DKK\".equals(currency)) {\r\n            if (isDepositBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryDKK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deposit + \" || \" + \"Account balance after transaction: \" + balanceDKK + \" \" + currency);\r\n            } else if (isWithdrawalBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryDKK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + withdrawal + \" || \" + \"Account balance after transaction: \" + balanceDKK + \" \" + currency);\r\n            } else if (isAddedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"+\";\r\n                stackHistoryDKK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + addedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceDKK + \" \" + currency);\r\n            } else if (isDeductedAfterCurrencyExchangeBalanceHistory) {\r\n                sign = \"-\";\r\n                stackHistoryDKK.push(now() + \" | \" + sign + amountString + \" \" + currency + \" | \" + deductedAfterTransfer + \" || \" + \"Account balance after transaction: \" + balanceDKK + \" \" + currency);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static String now() {\r\n        Calendar cal = Calendar.getInstance();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);\r\n        return sdf.format(cal.getTime());\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Menu.java b/src/main/java/org/example/Menu.java
--- a/src/main/java/org/example/Menu.java	(revision 944619e4362a6702d6aede72f51364cbca81f073)
+++ b/src/main/java/org/example/Menu.java	(date 1675114505422)
@@ -7,10 +7,14 @@
 //todo: jesli wystapi wyjatek wypisac tekst o co chodzi z wyjatkiem i wyswietlic go na kilka sekund w kosnsoli
 
 
+import org.apache.poi.ss.usermodel.Row;
+
 import java.text.DecimalFormat;
 import java.util.*;
 import java.text.SimpleDateFormat;
 
+import static org.example.Excel.sheet1;
+
 
 public class Menu {
 
@@ -64,8 +68,7 @@
 
         //XSSFWorkbook workbook = new XSSFWorkbook();
 
-        Excel tt = new Excel();
-        tt.test();
+
 
 
         int selection = 001;
@@ -412,23 +415,40 @@
 
         DecimalFormat df = new DecimalFormat("####0.00");
 
+        Excel tt = new Excel();
+        tt.test();
+
+        Excel.row1.createCell(0).setCellValue("Account balance ->");
+        Excel.row1.createCell(1).setCellValue("PLN");
+        Excel.row1.createCell(2).setCellValue("USD");
+        Excel.row1.createCell(3).setCellValue("EUR");
+        Excel.row1.createCell(4).setCellValue("CZK");
+        Excel.row1.createCell(5).setCellValue("NOK");
+        Excel.row1.createCell(6).setCellValue("DKK");
+
+
+
         do {
 
             boolean isCatch;
             do {
                 try {
                     isCatch = false;
-            System.out.print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
-            System.out.println("Your account balance:");
-            System.out.println("PLN  " + df.format(balancePLN));
-            System.out.println("USD  " + df.format(balanceUSD));
-            System.out.println("EUR  " + df.format(balanceEUR));
-            System.out.println("CZK  " + df.format(balanceCZK));
-            System.out.println("NOK  " + df.format(balanceNOK));
-            System.out.println("DKK  " + df.format(balanceDKK));
-            System.out.println("0. Cancel to previous menu");
+
+                    if (clientNumber == 123456 && "ABC123".equals(clientPassword)) {
+                        System.out.print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
+                        System.out.println("Your account balance:");
+                        System.out.println("PLN  " + df.format(user1.PLN));
+                        System.out.println("USD  " + df.format(user1.USD));
+                        System.out.println("EUR  " + df.format(user1.EUR));
+                        System.out.println("CZK  " + df.format(user1.CZK));
+                        System.out.println("NOK  " + df.format(user1.NOK));
+                        System.out.println("DKK  " + df.format(user1.DKK));
+                        System.out.println("0. Cancel to previous menu");
 
-            selection = scan.nextInt();
+                        selection = scan.nextInt();
+
+                    }
                 } catch (InputMismatchException e) {
                     isCatch = true;
                     scan.nextLine();
@@ -752,18 +772,22 @@
 
     public static void calculateAccountBalance_Deposit(String currencySelectedToCalculation_Deposit, double amount) {
 
-        if ("PLN".equals(currencySelectedToCalculation_Deposit)) {
-            balancePLN = balancePLN + amount;
-        } else if ("USD".equals(currencySelectedToCalculation_Deposit)) {
-            balanceUSD = balanceUSD + amount;
-        }   else if ("EUR".equals(currencySelectedToCalculation_Deposit)) {
-            balanceEUR = balanceEUR + amount;
-        }   else if ("CZK".equals(currencySelectedToCalculation_Deposit)) {
-            balanceCZK = balanceCZK + amount;
-        }   else if ("NOK".equals(currencySelectedToCalculation_Deposit)) {
-            balanceNOK = balanceNOK + amount;
-        }   else if ("DKK".equals(currencySelectedToCalculation_Deposit)) {
-            balanceDKK = balanceDKK + amount;
+
+        if (clientNumber == 123456 && "ABC123".equals(clientPassword)) {
+
+            if ("PLN".equals(currencySelectedToCalculation_Deposit)) {
+                user1.addToUserAccountBalance("PLN", amount);
+            } else if ("USD".equals(currencySelectedToCalculation_Deposit)) {
+                user1.addToUserAccountBalance("USD", amount);
+            } else if ("EUR".equals(currencySelectedToCalculation_Deposit)) {
+                user1.addToUserAccountBalance("EUR", amount);
+            } else if ("CZK".equals(currencySelectedToCalculation_Deposit)) {
+                user1.addToUserAccountBalance("CZK", amount);
+            } else if ("NOK".equals(currencySelectedToCalculation_Deposit)) {
+                user1.addToUserAccountBalance("NOK", amount);
+            } else if ("DKK".equals(currencySelectedToCalculation_Deposit)) {
+                user1.addToUserAccountBalance("DKK", amount);
+            }
         }
 
     }
Index: src/main/java/org/example/Excel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport org.apache.poi.ss.usermodel.Cell;\r\nimport org.apache.poi.ss.usermodel.Row;\r\nimport org.apache.poi.ss.usermodel.Sheet;\r\nimport org.apache.poi.ss.usermodel.Workbook;\r\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Iterator;\r\n\r\nimport static org.example.Menu.*;\r\n\r\npublic class Excel {\r\n\r\n    public static void test() {\r\n        Workbook workbook = new XSSFWorkbook();\r\n\r\n        Sheet sheet1 = workbook.createSheet(\"Andrzej Wojciechowski\");\r\n\r\n        Row row1 = sheet1.createRow(0);\r\n\r\n        row1.createCell(0).setCellValue(\"Account balance ->\");\r\n        row1.createCell(1).setCellValue(\"PLN\");\r\n        row1.createCell(2).setCellValue(\"USD\");\r\n        row1.createCell(3).setCellValue(\"EUR\");\r\n        row1.createCell(4).setCellValue(\"CZK\");\r\n        row1.createCell(5).setCellValue(\"NOK\");\r\n        row1.createCell(6).setCellValue(\"DKK\");\r\n\r\n        Row row2 = sheet1.createRow(1);\r\n        row2.createCell(1).setCellValue(balancePLN);\r\n        row2.createCell(2).setCellValue(balanceUSD);\r\n        row2.createCell(3).setCellValue(balanceEUR);\r\n        row2.createCell(4).setCellValue(balanceCZK);\r\n        row2.createCell(5).setCellValue(balanceNOK);\r\n        row2.createCell(6).setCellValue(balanceDKK);\r\n\r\n        Sheet sheet2 = workbook.createSheet(\"Jan Nowak\");\r\n        Row row11 = sheet2.createRow(0);\r\n\r\n        row11.createCell(0).setCellValue(\"Account balance ->\");\r\n        row11.createCell(1).setCellValue(\"PLN\");\r\n        row11.createCell(2).setCellValue(\"USD\");\r\n        row11.createCell(3).setCellValue(\"EUR\");\r\n        row11.createCell(4).setCellValue(\"CZK\");\r\n        row11.createCell(5).setCellValue(\"NOK\");\r\n        row11.createCell(6).setCellValue(\"DKK\");\r\n\r\n        Row row22 = sheet2.createRow(1);\r\n        row22.createCell(1).setCellValue(balancePLN);\r\n        row22.createCell(2).setCellValue(balanceUSD);\r\n        row22.createCell(3).setCellValue(balanceEUR);\r\n        row22.createCell(4).setCellValue(balanceCZK);\r\n        row22.createCell(5).setCellValue(balanceNOK);\r\n        row22.createCell(6).setCellValue(balanceDKK);\r\n\r\n        try {\r\n            workbook.write(new FileOutputStream(\"ExcelSample.xlsx\"));\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Excel.java b/src/main/java/org/example/Excel.java
--- a/src/main/java/org/example/Excel.java	(revision 944619e4362a6702d6aede72f51364cbca81f073)
+++ b/src/main/java/org/example/Excel.java	(date 1675114505420)
@@ -14,31 +14,24 @@
 
 public class Excel {
 
+    static Workbook workbook = new XSSFWorkbook();
+
+    static Sheet sheet1 = workbook.createSheet("Andrzej Wojciechowski");
+
+    static Row row1 = sheet1.createRow(0);
+    static Row row2 = sheet1.createRow(1);
+
+    static Sheet sheet2 = workbook.createSheet("Jan Nowak");
+    static Row row11 = sheet2.createRow(0);
+
+
+
     public static void test() {
-        Workbook workbook = new XSSFWorkbook();
 
-        Sheet sheet1 = workbook.createSheet("Andrzej Wojciechowski");
 
-        Row row1 = sheet1.createRow(0);
 
-        row1.createCell(0).setCellValue("Account balance ->");
-        row1.createCell(1).setCellValue("PLN");
-        row1.createCell(2).setCellValue("USD");
-        row1.createCell(3).setCellValue("EUR");
-        row1.createCell(4).setCellValue("CZK");
-        row1.createCell(5).setCellValue("NOK");
-        row1.createCell(6).setCellValue("DKK");
 
-        Row row2 = sheet1.createRow(1);
-        row2.createCell(1).setCellValue(balancePLN);
-        row2.createCell(2).setCellValue(balanceUSD);
-        row2.createCell(3).setCellValue(balanceEUR);
-        row2.createCell(4).setCellValue(balanceCZK);
-        row2.createCell(5).setCellValue(balanceNOK);
-        row2.createCell(6).setCellValue(balanceDKK);
 
-        Sheet sheet2 = workbook.createSheet("Jan Nowak");
-        Row row11 = sheet2.createRow(0);
 
         row11.createCell(0).setCellValue("Account balance ->");
         row11.createCell(1).setCellValue("PLN");
@@ -49,12 +42,12 @@
         row11.createCell(6).setCellValue("DKK");
 
         Row row22 = sheet2.createRow(1);
-        row22.createCell(1).setCellValue(balancePLN);
-        row22.createCell(2).setCellValue(balanceUSD);
-        row22.createCell(3).setCellValue(balanceEUR);
-        row22.createCell(4).setCellValue(balanceCZK);
-        row22.createCell(5).setCellValue(balanceNOK);
-        row22.createCell(6).setCellValue(balanceDKK);
+        row22.createCell(1).setCellValue(user2.PLN);
+        row22.createCell(2).setCellValue(user2.USD);
+        row22.createCell(3).setCellValue(user2.EUR);
+        row22.createCell(4).setCellValue(user2.CZK);
+        row22.createCell(5).setCellValue(user2.NOK);
+        row22.createCell(6).setCellValue(user2.DKK);
 
         try {
             workbook.write(new FileOutputStream("ExcelSample.xlsx"));
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6fbbdc11-741c-422a-971c-d45199b91785\" name=\"Changes\" comment=\"221117_tutorial for creating excel worksheet\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ExcelSample.xlsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ExcelSample.xlsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Balance.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/ExcelTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Excel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Menu.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/User.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Menu1\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2FgBEiHaV2CqgKiWkzWZ8xRb2Hg\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"last_opened_file_path\": \"D:/JAVA/221004_CurrencyExchangeApplication/CurrencyExchangeApplication\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"reference.settingsdialog.IDE.editor.colors\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.Main\" />\r\n      <module name=\"CurrencyExchangeApplication\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6fbbdc11-741c-422a-971c-d45199b91785\" name=\"Changes\" comment=\"\" />\r\n      <created>1664903740934</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1664903740934</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"init commit\">\r\n      <created>1664904410194</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1664904410194</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"init commit\">\r\n      <created>1664904803214</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1664904803214</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"init commit\">\r\n      <created>1665078670941</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665078670941</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Menu class added\">\r\n      <created>1665933555251</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665933555251</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Menu class added\">\r\n      <created>1665933586165</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665933586165</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Menu class added\">\r\n      <created>1665933730196</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665933730196</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"221016_Update\">\r\n      <created>1665946907089</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665946907089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"221017_Update\">\r\n      <created>1666033707221</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666033707221</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"221017_Update\">\r\n      <created>1666033963640</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666033963640</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"221017_Update\">\r\n      <created>1666034081285</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666034081285</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"221018_Update\">\r\n      <created>1666114013111</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666114013111</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"221018_Update\">\r\n      <created>1666120496024</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666120496024</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"221018_Update\">\r\n      <created>1666123418635</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666123418635</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"221023_Menu\">\r\n      <created>1666553374562</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666553374562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"221024_Menu\">\r\n      <created>1666630060869</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666630060869</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"221025_Menu\">\r\n      <created>1666727806828</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666727806828</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"221026_Menu\">\r\n      <created>1666808669323</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1666808669323</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"221029_Currency exchange calculation added\">\r\n      <created>1667069117421</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667069117421</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"221030_Added implementation of history balance in PLN currency\">\r\n      <created>1667157563499</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667157563499</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"221031_Added implementation of history balance in PLN currency\">\r\n      <created>1667241768940</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667241768940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"221102_Client number, added correct try catch validation\">\r\n      <created>1667416538590</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667416538590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"221111_client password validation, try catch, replace char with String for password variable\">\r\n      <created>1668193767228</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668193767228</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"221111_client password validation, try catch, replace char with String for password variable\">\r\n      <created>1668194431893</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668194431894</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"221111_client password validation, try catch, replace char with String for password variable\">\r\n      <created>1668194738631</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668194738631</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"221115_adding user class\">\r\n      <created>1668544305875</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668544305875</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"221115_adding user class\">\r\n      <created>1668544334307</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668544334307</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"221115_adding user class\">\r\n      <created>1668549069540</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668549069540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"221117_tutorial for creating excel worksheet\">\r\n      <created>1668714542771</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668714542771</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"221117_tutorial for creating excel worksheet\">\r\n      <created>1668714758897</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668714758897</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"30\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"f8c0108c-415b-4909-838e-e8a7dbae2def\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"init commit\" />\r\n    <MESSAGE value=\"Menu class added\" />\r\n    <MESSAGE value=\"221016_Update\" />\r\n    <MESSAGE value=\"221017_Update\" />\r\n    <MESSAGE value=\"221018_Update\" />\r\n    <MESSAGE value=\"221023_Menu\" />\r\n    <MESSAGE value=\"221024_Menu\" />\r\n    <MESSAGE value=\"221025_Menu\" />\r\n    <MESSAGE value=\"221026_Menu\" />\r\n    <MESSAGE value=\"221029_Currency exchange calculation added\" />\r\n    <MESSAGE value=\"221030_Added implementation of history balance in PLN currency\" />\r\n    <MESSAGE value=\"221031_Added implementation of history balance in PLN currency\" />\r\n    <MESSAGE value=\"221102_Client number, added correct try catch validation\" />\r\n    <MESSAGE value=\"221111_client password validation, try catch, replace char with String for password variable\" />\r\n    <MESSAGE value=\"221115_adding user class\" />\r\n    <MESSAGE value=\"221117_tutorial for creating excel worksheet\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"221117_tutorial for creating excel worksheet\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.InputMismatchException\" package=\"java.util\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/CurrencyExchangeApplication$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1675104690288\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.example.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 944619e4362a6702d6aede72f51364cbca81f073)
+++ b/.idea/workspace.xml	(date 1675114505340)
@@ -4,11 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6fbbdc11-741c-422a-971c-d45199b91785" name="Changes" comment="221117_tutorial for creating excel worksheet">
+    <list default="true" id="6fbbdc11-741c-422a-971c-d45199b91785" name="Changes" comment="230130_Creating user class">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/ExcelSample.xlsx" beforeDir="false" afterPath="$PROJECT_DIR$/ExcelSample.xlsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Balance.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/ExcelTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Excel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Excel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Excel.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Menu.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/User.java" afterDir="false" />
     </list>
@@ -287,7 +286,14 @@
       <option name="project" value="LOCAL" />
       <updated>1668714758897</updated>
     </task>
-    <option name="localTasksCounter" value="30" />
+    <task id="LOCAL-00030" summary="230130_Creating user class">
+      <created>1675108355002</created>
+      <option name="number" value="00030" />
+      <option name="presentableId" value="LOCAL-00030" />
+      <option name="project" value="LOCAL" />
+      <updated>1675108355002</updated>
+    </task>
+    <option name="localTasksCounter" value="31" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -323,7 +329,8 @@
     <MESSAGE value="221111_client password validation, try catch, replace char with String for password variable" />
     <MESSAGE value="221115_adding user class" />
     <MESSAGE value="221117_tutorial for creating excel worksheet" />
-    <option name="LAST_COMMIT_MESSAGE" value="221117_tutorial for creating excel worksheet" />
+    <MESSAGE value="230130_Creating user class" />
+    <option name="LAST_COMMIT_MESSAGE" value="230130_Creating user class" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
